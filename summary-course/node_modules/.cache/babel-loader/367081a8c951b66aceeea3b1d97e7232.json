{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/src/pages/AllMeetups.js\",\n    _s = $RefreshSig$();\n\nimport MeetupList from \"../components/meetups/MeetupList.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummy_data = [{\n  id: \"id-1\",\n  location: \"nyc\",\n  image: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%3Fid%3DOIP.jnr-ycKLfJmMmXamEmAi9wHaJ4%26pid%3DApi&f=1\",\n  description: \"statue of liberty\"\n}, {\n  id: \"id-2\",\n  location: \"sf\",\n  image: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse2.mm.bing.net%2Fth%3Fid%3DOIP.47yS2s8sITXdYHQVIMHVSAHaE7%26pid%3DApi&f=1\",\n  description: \"golden gate bridge\"\n}];\n\nfunction AllMeetupsPage() {\n  _s();\n\n  // set useState b/c fetch returns a promise but JS will not wait to fetch the data before\n  // rendering the return code, thus using state to have load something (s/ loading clock)\n  // until the fetch is complete, then will render with data\n  [isLoading, setIsLoading] = useState(true);\n  fetch(\"https://react-getting-started-be137-default-rtdb.firebaseio.com/meetups.json\").then(res => {\n    return res.json();\n  }).then(data => {\n    return setIsLoading(false);\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"--- Waiting to Load ---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"25px\",\n          \"font-weight\": \"bolder\"\n        },\n        children: \"All Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n        meetups: dummy_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this);\n  }\n}\n\n_s(AllMeetupsPage, \"6J2wAdZ2kjF0faG/fj33ZXGxstA=\");\n\n_c = AllMeetupsPage;\nexport default AllMeetupsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMeetupsPage\");","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/src/pages/AllMeetups.js"],"names":["MeetupList","useState","dummy_data","id","location","image","description","AllMeetupsPage","isLoading","setIsLoading","fetch","then","res","json","data","fontSize"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,qCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,MAAMC,UAAU,GAAG,CAClB;AACCC,EAAAA,EAAE,EAAE,MADL;AAECC,EAAAA,QAAQ,EAAE,KAFX;AAGCC,EAAAA,KAAK,EACJ,yIAJF;AAKCC,EAAAA,WAAW,EAAE;AALd,CADkB,EAQlB;AACCH,EAAAA,EAAE,EAAE,MADL;AAECC,EAAAA,QAAQ,EAAE,IAFX;AAGCC,EAAAA,KAAK,EACJ,yIAJF;AAKCC,EAAAA,WAAW,EAAE;AALd,CARkB,CAAnB;;AAiBA,SAASC,cAAT,GAA0B;AAAA;;AACzB;AACA;AACA;AACA,GAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAApC;AACAS,EAAAA,KAAK,CACJ,8EADI,CAAL,CAGEC,IAHF,CAGQC,GAAD,IAAS;AACd,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACA,GALF,EAMEF,IANF,CAMQG,IAAD,IAAU;AACf,WAAOL,YAAY,CAAC,KAAD,CAAnB;AACA,GARF;;AASA,MAAID,SAAJ,EAAe;AACd,wBAAO;AAAA,6BAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GAFD,MAEO;AACN,wBACC;AAAA,8BACC;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,QAAQ,EAAE,MAAZ;AAAoB,yBAAe;AAAnC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEb;AAArB;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAQA;AACD;;GA1BQK,c;;KAAAA,c;AA2BT,eAAeA,cAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList.js\";\nimport { useState } from \"react\";\nconst dummy_data = [\n\t{\n\t\tid: \"id-1\",\n\t\tlocation: \"nyc\",\n\t\timage:\n\t\t\t\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%3Fid%3DOIP.jnr-ycKLfJmMmXamEmAi9wHaJ4%26pid%3DApi&f=1\",\n\t\tdescription: \"statue of liberty\",\n\t},\n\t{\n\t\tid: \"id-2\",\n\t\tlocation: \"sf\",\n\t\timage:\n\t\t\t\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse2.mm.bing.net%2Fth%3Fid%3DOIP.47yS2s8sITXdYHQVIMHVSAHaE7%26pid%3DApi&f=1\",\n\t\tdescription: \"golden gate bridge\",\n\t},\n];\n\nfunction AllMeetupsPage() {\n\t// set useState b/c fetch returns a promise but JS will not wait to fetch the data before\n\t// rendering the return code, thus using state to have load something (s/ loading clock)\n\t// until the fetch is complete, then will render with data\n\t[isLoading, setIsLoading] = useState(true);\n\tfetch(\n\t\t\"https://react-getting-started-be137-default-rtdb.firebaseio.com/meetups.json\"\n\t)\n\t\t.then((res) => {\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((data) => {\n\t\t\treturn setIsLoading(false);\n\t\t});\n\tif (isLoading) {\n\t\treturn <section><p>--- Waiting to Load ---</p></section>;\n\t} else {\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<div style={{ fontSize: \"25px\", \"font-weight\": \"bolder\" }}>\n\t\t\t\t\tAll Meetups\n\t\t\t\t</div>\n\t\t\t\t<MeetupList meetups={dummy_data} />\n\t\t\t</section>\n\t\t);\n\t}\n}\nexport default AllMeetupsPage;\n"]},"metadata":{},"sourceType":"module"}
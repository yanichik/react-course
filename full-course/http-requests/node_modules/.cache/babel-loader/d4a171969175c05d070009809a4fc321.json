{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/http-requests/src/App.js\";\nimport React, { useState } from \"react\"; // import { useState }, React from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchMoviesHandler() {\n    setIsLoading(prevStatus => !prevStatus);\n\n    try {\n      const rsvp = await fetch(\"https://swapi.dev/api/films\");\n\n      if (!rsvp.ok) {\n        throw new Error(\"Something Went Wrong!\");\n      }\n\n      const data = await rsvp.json();\n      const transformedMovies = data.results.map(movie => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(prevStatus => !prevStatus);\n    } catch {}\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, \"Found No Movies\"), !isLoading ? /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 52\n    }\n  }, \"\\\"Loading ...\\\"\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/http-requests/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","prevStatus","rsvp","fetch","ok","Error","data","json","transformedMovies","results","map","movie","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AACA,iBAAeS,kBAAf,GAAoC;AACnCH,IAAAA,YAAY,CAAEI,UAAD,IAAgB,CAACA,UAAlB,CAAZ;;AACA,QAAI;AACH,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAxB;;AACA,UAAI,CAACD,IAAI,CAACE,EAAV,EAAc;AACb,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACA;;AACD,YAAMC,IAAI,GAAG,MAAMJ,IAAI,CAACK,IAAL,EAAnB;AACA,YAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,KAAD,IAAW;AACrD,eAAO;AACNC,UAAAA,EAAE,EAAED,KAAK,CAACE,UADJ;AAENC,UAAAA,KAAK,EAAEH,KAAK,CAACG,KAFP;AAGNC,UAAAA,WAAW,EAAEJ,KAAK,CAACK,aAHb;AAINC,UAAAA,WAAW,EAAEN,KAAK,CAACO;AAJb,SAAP;AAMA,OAPyB,CAA1B;AAQAvB,MAAAA,SAAS,CAACa,iBAAD,CAAT;AACAX,MAAAA,YAAY,CAAEI,UAAD,IAAgB,CAACA,UAAlB,CAAZ;AACA,KAhBD,CAgBE,MAAM,CAAE;AACV;;AAED,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,OAAO,EAAED,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CADD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEN,MAAM,CAACyB,MAAP,KAAkB,CAAlB,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADzB,EAEE,CAACvB,SAAD,gBAAa,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEF,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,gBAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFhD,CAJD,CADD;AAWA;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from \"react\";\n// import { useState }, React from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\tasync function fetchMoviesHandler() {\n\t\tsetIsLoading((prevStatus) => !prevStatus);\n\t\ttry {\n\t\t\tconst rsvp = await fetch(\"https://swapi.dev/api/films\");\n\t\t\tif (!rsvp.ok) {\n\t\t\t\tthrow new Error(\"Something Went Wrong!\");\n\t\t\t}\n\t\t\tconst data = await rsvp.json();\n\t\t\tconst transformedMovies = data.results.map((movie) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: movie.episode_id,\n\t\t\t\t\ttitle: movie.title,\n\t\t\t\t\topeningText: movie.opening_crawl,\n\t\t\t\t\treleaseDate: movie.release_date,\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetMovies(transformedMovies);\n\t\t\tsetIsLoading((prevStatus) => !prevStatus);\n\t\t} catch {}\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t{movies.length === 0 && <p>Found No Movies</p>}\n\t\t\t\t{!isLoading ? <MoviesList movies={movies} /> : <p>\"Loading ...\"</p>}\n\t\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
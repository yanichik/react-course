{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/react-meals-v2/src/components/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCart = {\n  items: [],\n  total: 0\n};\n\nfunction cartReducer(state, action) {\n  if (action.type === \"ADD\") {\n    // check if existing\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id); // if existing, update item\n\n    if (existingItemIndex >= 0) {\n      const existingItem = state.items[existingItemIndex];\n      const updatedItem = { ...existingItem,\n        amount: action.item.amount + existingItem.amount\n      };\n      let updatedItems = { ...state\n      };\n      updatedItems.items[existingItemIndex] = updatedItem;\n      updatedItems.total = state.total + action.item.price * action.item.amount;\n      return updatedItems;\n    } else {\n      return {\n        items: state.items.concat(action.item),\n        total: state.total + action.item.price * action.item.amount\n      };\n    }\n  }\n\n  if (action.type === \"REMOVE\") {\n    // find item per id\n    const existingItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingItemIndex];\n    let updatedItems = { ...state\n    };\n\n    if (updatedItems.items[existingItemIndex].amount === 1) {\n      updatedItems.total = updatedItems.total - existingItem.price;\n      updatedItems = updatedItems.items.filter(item => item.id !== action.id);\n      return updatedItems;\n    }\n  }\n\n  return defaultCart;\n}\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatch] = useReducer(cartReducer, defaultCart);\n\n  function addItemHandler(item) {\n    return dispatch({\n      type: \"ADD\",\n      item: item\n    });\n  }\n\n  function removeItemHandler(id) {\n    return dispatch({\n      type: \"REMOVE\",\n      id: id\n    });\n  } // context data managed here in provider and NOT in the context file.\n  // the context file \"initialization\" is ONLY for IDE intellisense purposes\n\n\n  const cartContext = {\n    items: cartState.items,\n    total: cartState.total,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CartProvider, \"2i5iv8EjF4QFDT/8aWDL+r+AOCw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/react-meals-v2/src/components/store/CartProvider.js"],"names":["CartContext","React","useReducer","defaultCart","items","total","cartReducer","state","action","type","existingItemIndex","findIndex","item","id","existingItem","updatedItem","amount","updatedItems","price","concat","filter","CartProvider","props","cartState","dispatch","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import CartContext from \"./cart-context\";\nimport React, { useReducer } from \"react\";\n\nconst defaultCart = {\n\titems: [],\n\ttotal: 0,\n};\n\nfunction cartReducer(state, action) {\n\tif (action.type === \"ADD\") {\n\t\t// check if existing\n\t\tconst existingItemIndex = state.items.findIndex(\n\t\t\t(item) => item.id === action.item.id\n\t\t);\n\t\t// if existing, update item\n\t\tif (existingItemIndex >= 0) {\n\t\t\tconst existingItem = state.items[existingItemIndex];\n\t\t\tconst updatedItem = {\n\t\t\t\t...existingItem,\n\t\t\t\tamount: action.item.amount + existingItem.amount,\n\t\t\t};\n\t\t\tlet updatedItems = { ...state };\n\t\t\tupdatedItems.items[existingItemIndex] = updatedItem;\n\t\t\tupdatedItems.total = state.total + action.item.price * action.item.amount;\n\t\t\treturn updatedItems;\n\t\t} else {\n\t\t\treturn {\n\t\t\t\titems: state.items.concat(action.item),\n\t\t\t\ttotal: state.total + action.item.price * action.item.amount,\n\t\t\t};\n\t\t}\n\t}\n\tif (action.type === \"REMOVE\") {\n\t\t// find item per id\n\t\tconst existingItemIndex = state.items.findIndex(\n\t\t\t(item) => item.id === action.id\n\t\t);\n\t\tconst existingItem = state.items[existingItemIndex];\n\t\tlet updatedItems = { ...state };\n\t\tif (updatedItems.items[existingItemIndex].amount === 1) {\n\t\t\tupdatedItems.total = updatedItems.total - existingItem.price;\n\t\t\tupdatedItems = updatedItems.items.filter((item) => item.id !== action.id);\n\t\t\treturn updatedItems;\n\t\t}\n\t}\n\treturn defaultCart;\n}\n\nfunction CartProvider(props) {\n\tconst [cartState, dispatch] = useReducer(cartReducer, defaultCart);\n\tfunction addItemHandler(item) {\n\t\treturn dispatch({ type: \"ADD\", item: item });\n\t}\n\tfunction removeItemHandler(id) {\n\t\treturn dispatch({ type: \"REMOVE\", id: id });\n\t}\n\t// context data managed here in provider and NOT in the context file.\n\t// the context file \"initialization\" is ONLY for IDE intellisense purposes\n\tconst cartContext = {\n\t\titems: cartState.items,\n\t\ttotal: cartState.total,\n\t\taddItem: addItemHandler,\n\t\tremoveItem: removeItemHandler,\n\t};\n\treturn (\n\t\t<CartContext.Provider value={cartContext}>\n\t\t\t{props.children}\n\t\t</CartContext.Provider>\n\t);\n}\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}
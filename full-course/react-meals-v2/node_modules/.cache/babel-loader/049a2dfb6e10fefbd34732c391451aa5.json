{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/react-meals-v2/src/components/Layout/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport CartIcon from \"../Cart/CartIcon\";\nimport styles from \"./HeaderCartButton.module.css\";\nimport CartContext from \"../store/cart-context\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HeaderCartButton(props) {\n  _s();\n\n  // bump effect starts at false so it doesn't bump at refresh\n  const [activateBump, setActivateBump] = useState(false); // cartCtx is the global cart context object from which the global state can be accessed & updated\n\n  const cartCtx = useContext(CartContext); // numCartItems takes from the cart context to display the current state\n  // of the menu and amounts per menu item\n\n  const numCartItems = cartCtx.items.reduce((prevNum, curItem) => {\n    return prevNum + curItem.amount;\n  }, 0); // btnStyles always includes the button style and on condition includes the bump style\n\n  const btnStyles = `${styles.button} ${activateBump ? styles.bump : \"\"} `; //using useEffect to create bump b/c it's a side effect.\n\n  useEffect(() => {\n    // no bump when cart is empty\n    if (cartCtx.items.length === 0) {\n      return;\n    }\n\n    setActivateBump(true); //set timeout to turn off bump after 300ms, since that is the time length of the bump itself\n\n    const timer = setTimeout(() => setActivateBump(false), 300);\n    return () => clearTimeout(timer); // useEffect activated ONLY when cartCtx changes, which occurs with additions/subtractions\n    // to cart\n  }, [cartCtx]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnStyles,\n    onClick: props.onOpenCart,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.badge,\n      children: numCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_s(HeaderCartButton, \"1LYgy2ysMAM+kGnmwU1mLxNhPPI=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/react-meals-v2/src/components/Layout/HeaderCartButton.js"],"names":["CartIcon","styles","CartContext","useContext","useEffect","useState","HeaderCartButton","props","activateBump","setActivateBump","cartCtx","numCartItems","items","reduce","prevNum","curItem","amount","btnStyles","button","bump","length","timer","setTimeout","clearTimeout","onOpenCart","icon","badge"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAChC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,KAAD,CAAhD,CAFgC,CAGhC;;AACA,QAAMK,OAAO,GAAGP,UAAU,CAACD,WAAD,CAA1B,CAJgC,CAKhC;AACA;;AACA,QAAMS,YAAY,GAAGD,OAAO,CAACE,KAAR,CAAcC,MAAd,CAAqB,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC/D,WAAOD,OAAO,GAAGC,OAAO,CAACC,MAAzB;AACA,GAFoB,EAElB,CAFkB,CAArB,CAPgC,CAUhC;;AACA,QAAMC,SAAS,GAAI,GAAEhB,MAAM,CAACiB,MAAO,IAAGV,YAAY,GAAGP,MAAM,CAACkB,IAAV,GAAiB,EAAG,GAAtE,CAXgC,CAYhC;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACf;AACA,QAAIM,OAAO,CAACE,KAAR,CAAcQ,MAAd,KAAyB,CAA7B,EAAgC;AAC/B;AACA;;AACDX,IAAAA,eAAe,CAAC,IAAD,CAAf,CALe,CAMf;;AACA,UAAMY,KAAK,GAAGC,UAAU,CAAC,MAAMb,eAAe,CAAC,KAAD,CAAtB,EAA+B,GAA/B,CAAxB;AACA,WAAO,MAAMc,YAAY,CAACF,KAAD,CAAzB,CARe,CASf;AACA;AACA,GAXQ,EAWN,CAACX,OAAD,CAXM,CAAT;AAYA,sBACC;AAAQ,IAAA,SAAS,EAAEO,SAAnB;AAA8B,IAAA,OAAO,EAAEV,KAAK,CAACiB,UAA7C;AAAA,4BACC;AAAM,MAAA,SAAS,EAAEvB,MAAM,CAACwB,IAAxB;AAAA,6BAIC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,YADD,eAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD,eAQC;AAAM,MAAA,SAAS,EAAExB,MAAM,CAACyB,KAAxB;AAAA,gBAAgCf;AAAhC;AAAA;AAAA;AAAA;AAAA,YARD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GArCQL,gB;;KAAAA,gB;AAuCT,eAAeA,gBAAf","sourcesContent":["import CartIcon from \"../Cart/CartIcon\";\nimport styles from \"./HeaderCartButton.module.css\";\nimport CartContext from \"../store/cart-context\";\nimport { useContext, useEffect, useState } from \"react\";\nfunction HeaderCartButton(props) {\n\t// bump effect starts at false so it doesn't bump at refresh\n\tconst [activateBump, setActivateBump] = useState(false);\n\t// cartCtx is the global cart context object from which the global state can be accessed & updated\n\tconst cartCtx = useContext(CartContext);\n\t// numCartItems takes from the cart context to display the current state\n\t// of the menu and amounts per menu item\n\tconst numCartItems = cartCtx.items.reduce((prevNum, curItem) => {\n\t\treturn prevNum + curItem.amount;\n\t}, 0);\n\t// btnStyles always includes the button style and on condition includes the bump style\n\tconst btnStyles = `${styles.button} ${activateBump ? styles.bump : \"\"} `;\n\t//using useEffect to create bump b/c it's a side effect.\n\tuseEffect(() => {\n\t\t// no bump when cart is empty\n\t\tif (cartCtx.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tsetActivateBump(true);\n\t\t//set timeout to turn off bump after 300ms, since that is the time length of the bump itself\n\t\tconst timer = setTimeout(() => setActivateBump(false), 300);\n\t\treturn () => clearTimeout(timer);\n\t\t// useEffect activated ONLY when cartCtx changes, which occurs with additions/subtractions\n\t\t// to cart\n\t}, [cartCtx]);\n\treturn (\n\t\t<button className={btnStyles} onClick={props.onOpenCart}>\n\t\t\t<span className={styles.icon}>\n\t\t\t\t{/* CartIcon is a component function that returns svg code.\n\t\t\t\tSVG code is simply html that enables to make graphics.\n\t\t\t\tSVG => scalable vector graphics */}\n\t\t\t\t<CartIcon />\n\t\t\t</span>\n\t\t\t<span>Cart</span>\n\t\t\t<span className={styles.badge}>{numCartItems}</span>\n\t\t</button>\n\t);\n}\n\nexport default HeaderCartButton;\n"]},"metadata":{},"sourceType":"module"}
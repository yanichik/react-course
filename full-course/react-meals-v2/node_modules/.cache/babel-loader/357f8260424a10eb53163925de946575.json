{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/react-meals-v2/src/components/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCart = {\n  items: [],\n  total: 0\n};\n\nfunction cartReducer(state, action) {\n  console.log(action.type);\n\n  if (action === \"ADD\") {\n    console.log(state.items.concat(action.item));\n    return {\n      items: state.items.concat(action.item),\n      total: state.total + action.item.price * action.item.amount\n    };\n  }\n\n  return defaultCart;\n}\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatch] = useReducer(cartReducer, defaultCart);\n\n  function addItemHandler(item) {\n    return dispatch({\n      type: \"ADD\",\n      item: item\n    });\n  }\n\n  function removeItemHandler(id) {\n    return dispatch({\n      type: \"REMOVE\",\n      id: id\n    });\n  } // context data managed here in provider and NOT in the context file.\n  // the context file \"initialization\" is ONLY for IDE intellisense purposes\n\n\n  const cartContext = {\n    items: [],\n    total: 0,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  }; // console.log(cartContext.total);\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CartProvider, \"2i5iv8EjF4QFDT/8aWDL+r+AOCw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/react-meals-v2/src/components/store/CartProvider.js"],"names":["CartContext","React","useReducer","defaultCart","items","total","cartReducer","state","action","console","log","type","concat","item","price","amount","CartProvider","props","cartState","dispatch","addItemHandler","removeItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,MAAMC,WAAW,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAApB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,MAAIH,MAAM,KAAK,KAAf,EAAsB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAmBJ,MAAM,CAACK,IAA1B,CAAZ;AACA,WAAO;AACNT,MAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAmBJ,MAAM,CAACK,IAA1B,CADD;AAENR,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACK,IAAP,CAAYC,KAAZ,GAAoBN,MAAM,CAACK,IAAP,CAAYE;AAF/C,KAAP;AAIA;;AACD,SAAOZ,WAAP;AACA;;AAED,SAASa,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBjB,UAAU,CAACI,WAAD,EAAcH,WAAd,CAAxC;;AACA,WAASiB,cAAT,CAAwBP,IAAxB,EAA8B;AAC7B,WAAOM,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAf;AACA;;AACD,WAASQ,iBAAT,CAA2BC,EAA3B,EAA+B;AAC9B,WAAOH,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAE,QAAR;AAAkBW,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAf;AACA,GAP2B,CAQ5B;AACA;;;AACA,QAAMC,WAAW,GAAG;AACnBnB,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,KAAK,EAAE,CAFY;AAGnBmB,IAAAA,OAAO,EAAEJ,cAHU;AAInBK,IAAAA,UAAU,EAAEJ;AAJO,GAApB,CAV4B,CAgB5B;;AACA,sBACC,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACEN,KAAK,CAACS;AADR;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;GAtBQV,Y;;KAAAA,Y;AAwBT,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\nimport React, { useReducer } from \"react\";\n\nconst defaultCart = {\n\titems: [],\n\ttotal: 0,\n};\n\nfunction cartReducer(state, action) {\n\tconsole.log(action.type);\n\tif (action === \"ADD\") {\n\t\tconsole.log(state.items.concat(action.item));\n\t\treturn {\n\t\t\titems: state.items.concat(action.item),\n\t\t\ttotal: state.total + action.item.price * action.item.amount,\n\t\t};\n\t}\n\treturn defaultCart;\n}\n\nfunction CartProvider(props) {\n\tconst [cartState, dispatch] = useReducer(cartReducer, defaultCart);\n\tfunction addItemHandler(item) {\n\t\treturn dispatch({ type: \"ADD\", item: item });\n\t}\n\tfunction removeItemHandler(id) {\n\t\treturn dispatch({ type: \"REMOVE\", id: id });\n\t}\n\t// context data managed here in provider and NOT in the context file.\n\t// the context file \"initialization\" is ONLY for IDE intellisense purposes\n\tconst cartContext = {\n\t\titems: [],\n\t\ttotal: 0,\n\t\taddItem: addItemHandler,\n\t\tremoveItem: removeItemHandler,\n\t};\n\t// console.log(cartContext.total);\n\treturn (\n\t\t<CartContext.Provider value={cartContext}>\n\t\t\t{props.children}\n\t\t</CartContext.Provider>\n\t);\n}\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/react-meals-v2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport { useState } from \"react\";\nimport CartProvider from \"./components/store/CartProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // state that determines when cart modal opens in an overlay\n  const [showCart, setShowCart] = useState(false); // closes cart modal\n\n  function closeCartHandler() {\n    setShowCart(false);\n  } // open cart modal\n\n\n  function openCartHandler() {\n    setShowCart(true);\n  }\n\n  return (\n    /*#__PURE__*/\n    // Cart Provider provides the context, which is the app-wide data sharing. \n    // In this case, it's sharing the menu items, prices, and amounts which can be\n    // used in all parts of the app. Since App.js is the head of the app, this is\n    // the perfect place to share from such that it distributes to the entire app\n    _jsxDEV(CartProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onOpenCart: openCartHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Meals, {\n          showCartStatus: showCart,\n          onCloseCart: closeCartHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this)\n  );\n}\n\n_s(App, \"pHKGj54yJ4g8zkcZopUKLi4/9XQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/react-meals-v2/src/App.js"],"names":["Header","Meals","useState","CartProvider","App","showCart","setShowCart","closeCartHandler","openCartHandler"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC,CAFc,CAGb;;AACD,WAASK,gBAAT,GAA4B;AAC3BD,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,GANa,CAOb;;;AACD,WAASE,eAAT,GAA2B;AAC1BF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA;;AACD;AAAA;AACG;AACA;AACA;AACA;AACF,YAAC,YAAD;AAAA,8BAEC,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAA,+BACC,QAAC,KAAD;AAAO,UAAA,cAAc,EAAEH,QAAvB;AAAiC,UAAA,WAAW,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AALD;AAaA;;GAxBQH,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport { useState } from \"react\";\nimport CartProvider from \"./components/store/CartProvider\";\nfunction App() {\n  // state that determines when cart modal opens in an overlay\n\tconst [showCart, setShowCart] = useState(false);\n  // closes cart modal\n\tfunction closeCartHandler() {\n\t\tsetShowCart(false);\n\t}\n  // open cart modal\n\tfunction openCartHandler() {\n\t\tsetShowCart(true);\n\t}\n\treturn (\n    // Cart Provider provides the context, which is the app-wide data sharing. \n    // In this case, it's sharing the menu items, prices, and amounts which can be\n    // used in all parts of the app. Since App.js is the head of the app, this is\n    // the perfect place to share from such that it distributes to the entire app\n\t\t<CartProvider>\n      {/* Header is the  */}\n\t\t\t<Header onOpenCart={openCartHandler} />\n\t\t\t<main>\n\t\t\t\t<Meals showCartStatus={showCart} onCloseCart={closeCartHandler} />\n\t\t\t</main>\n\t\t</CartProvider>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
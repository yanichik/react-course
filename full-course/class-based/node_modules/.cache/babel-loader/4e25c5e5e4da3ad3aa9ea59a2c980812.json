{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/class-based/src/components/UserFinder.js\";\nimport { Fragment, useState, useEffect, Component } from \"react\";\nimport Users from \"./Users\";\nimport classes from \"./UserFinder.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: \"u1\",\n  name: \"Max\"\n}, {\n  id: \"u2\",\n  name: \"Manuel\"\n}, {\n  id: \"u3\",\n  name: \"Julie\"\n}];\n\nclass UserFinder extends Component {\n  constructor() {\n    super();\n\n    this.searchChangeHandler = event => {\n      console.log(event);\n      this.setState({\n        searchTerm: event.target.value\n      });\n    };\n\n    this.state = {\n      filteredUsers: DUMMY_USERS,\n      searchTerm: \"\"\n    };\n  }\n\n  // prevProps and prevState must be 1st and 2nd components\n  // they can be named anything but this is the convention\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        searchTerm: DUMMY_USERS.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this);\n  }\n\n} // const UserFinder = () => {\n// const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n// const [searchTerm, setSearchTerm] = useState(\"\");\n// useEffect(() => {\n// \tsetFilteredUsers(\n// \t\tDUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n// \t);\n// }, [searchTerm]);\n// const searchChangeHandler = (event) => {\n// \tsetSearchTerm(event.target.value);\n// };\n// return (\n// \t<Fragment>\n// \t\t<div className={classes.finder}>\n// \t\t\t<input type=\"search\" onChange={searchChangeHandler} />\n// \t\t</div>\n// \t\t<Users users={filteredUsers} />\n// \t</Fragment>\n// );\n// };\n\n\nexport default UserFinder;","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/class-based/src/components/UserFinder.js"],"names":["Fragment","useState","useEffect","Component","Users","classes","DUMMY_USERS","id","name","UserFinder","constructor","searchChangeHandler","event","console","log","setState","searchTerm","target","value","state","filteredUsers","componentDidUpdate","prevProps","prevState","filter","user","includes","render","finder","bind"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,SAAxC,QAAyD,OAAzD;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,WAAW,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CADmB,EAEnB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAFmB,EAGnB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAHmB,CAApB;;AAMA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAClCO,EAAAA,WAAW,GAAG;AACb;;AADa,SAOdC,mBAPc,GAOSC,KAAD,IAAW;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAKG,QAAL,CAAc;AACbC,QAAAA,UAAU,EAAEJ,KAAK,CAACK,MAAN,CAAaC;AADZ,OAAd;AAGA,KAZa;;AAEb,SAAKC,KAAL,GAAa;AACZC,MAAAA,aAAa,EAAEd,WADH;AAEZU,MAAAA,UAAU,EAAE;AAFA,KAAb;AAIA;;AAOD;AACA;AACAK,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAIA,SAAS,CAACP,UAAV,KAAyB,KAAKG,KAAL,CAAWH,UAAxC,EAAoD;AACnD,WAAKD,QAAL,CAAc;AACbC,QAAAA,UAAU,EAAEV,WAAW,CAACkB,MAAZ,CAAoBC,IAAD,IAC9BA,IAAI,CAACjB,IAAL,CAAUkB,QAAV,CAAmB,KAAKP,KAAL,CAAWH,UAA9B,CADW;AADC,OAAd;AAKA;AACD;;AACDW,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,QAAD;AAAA,8BACC;AAAK,QAAA,SAAS,EAAEtB,OAAO,CAACuB,MAAxB;AAAA,+BACC;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,KAAKjB,mBAAL,CAAyBkB,IAAzB,CAA8B,IAA9B;AAA/B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAQA;;AAlCiC,C,CAqCnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeX,UAAf","sourcesContent":["import { Fragment, useState, useEffect, Component } from \"react\";\n\nimport Users from \"./Users\";\nimport classes from \"./UserFinder.module.css\";\n\nconst DUMMY_USERS = [\n\t{ id: \"u1\", name: \"Max\" },\n\t{ id: \"u2\", name: \"Manuel\" },\n\t{ id: \"u3\", name: \"Julie\" },\n];\n\nclass UserFinder extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tfilteredUsers: DUMMY_USERS,\n\t\t\tsearchTerm: \"\",\n\t\t};\n\t}\n\tsearchChangeHandler = (event) => {\n\t\tconsole.log(event);\n\t\tthis.setState({\n\t\t\tsearchTerm: event.target.value,\n\t\t});\n\t};\n\t// prevProps and prevState must be 1st and 2nd components\n\t// they can be named anything but this is the convention\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.searchTerm !== this.state.searchTerm) {\n\t\t\tthis.setState({\n\t\t\t\tsearchTerm: DUMMY_USERS.filter((user) =>\n\t\t\t\t\tuser.name.includes(this.state.searchTerm)\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className={classes.finder}>\n\t\t\t\t\t<input type=\"search\" onChange={this.searchChangeHandler.bind(this)} />\n\t\t\t\t</div>\n\t\t\t\t<Users users={this.state.filteredUsers} />\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n// const UserFinder = () => {\n// const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n// const [searchTerm, setSearchTerm] = useState(\"\");\n\n// useEffect(() => {\n// \tsetFilteredUsers(\n// \t\tDUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n// \t);\n// }, [searchTerm]);\n\n// const searchChangeHandler = (event) => {\n// \tsetSearchTerm(event.target.value);\n// };\n\n// return (\n// \t<Fragment>\n// \t\t<div className={classes.finder}>\n// \t\t\t<input type=\"search\" onChange={searchChangeHandler} />\n// \t\t</div>\n// \t\t<Users users={filteredUsers} />\n// \t</Fragment>\n// );\n// };\n\nexport default UserFinder;\n"]},"metadata":{},"sourceType":"module"}
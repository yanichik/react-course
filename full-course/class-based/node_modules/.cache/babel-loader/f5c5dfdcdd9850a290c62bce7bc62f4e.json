{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/class-based/src/components/UserFinder.js\";\nimport { Fragment, useState, useEffect, Component } from \"react\";\nimport UsersContext from \"./user-context\";\nimport Users from \"./Users\";\nimport classes from \"./UserFinder.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserFinder extends Component {\n  constructor() {\n    super(); // console.log(UsersContext);\n\n    this.searchChangeHandler = event => {\n      this.setState({\n        searchTerm: event.target.value\n      });\n    };\n\n    this.state = {\n      filteredUsers: this.context.users,\n      searchTerm: \"\"\n    };\n  }\n\n  // prevProps and prevState must be 1st and 2nd components\n  // they can be named anything but this is the convention\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.context.users.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this);\n  }\n\n} // const UserFinder = () => {\n// const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n// const [searchTerm, setSearchTerm] = useState(\"\");\n// useEffect(() => {\n// \tsetFilteredUsers(\n// \t\tDUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n// \t);\n// }, [searchTerm]);\n// const searchChangeHandler = (event) => {\n// \tsetSearchTerm(event.target.value);\n// };\n// return (\n// \t<Fragment>\n// \t\t<div className={classes.finder}>\n// \t\t\t<input type=\"search\" onChange={searchChangeHandler} />\n// \t\t</div>\n// \t\t<Users users={filteredUsers} />\n// \t</Fragment>\n// );\n// };\n\n\nUserFinder.contextType = UsersContext;\nexport default UserFinder;","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/class-based/src/components/UserFinder.js"],"names":["Fragment","useState","useEffect","Component","UsersContext","Users","classes","UserFinder","constructor","searchChangeHandler","event","setState","searchTerm","target","value","state","filteredUsers","context","users","componentDidUpdate","prevProps","prevState","filter","user","name","includes","render","finder","bind","contextType"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAElCK,EAAAA,WAAW,GAAG;AACb,YADa,CAEb;;AAFa,SAQdC,mBARc,GAQSC,KAAD,IAAW;AAChC,WAAKC,QAAL,CAAc;AACbC,QAAAA,UAAU,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADZ,OAAd;AAGA,KAZa;;AAGb,SAAKC,KAAL,GAAa;AACZC,MAAAA,aAAa,EAAE,KAAKC,OAAL,CAAaC,KADhB;AAEZN,MAAAA,UAAU,EAAE;AAFA,KAAb;AAIA;;AAMD;AACA;AACAO,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAIA,SAAS,CAACT,UAAV,KAAyB,KAAKG,KAAL,CAAWH,UAAxC,EAAoD;AACnD,WAAKD,QAAL,CAAc;AACbK,QAAAA,aAAa,EAAE,KAAKC,OAAL,CAAaC,KAAb,CAAmBI,MAAnB,CAA2BC,IAAD,IACxCA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,KAAKV,KAAL,CAAWH,UAA9B,CADc;AADF,OAAd;AAKA;AACD;;AACDc,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,QAAD;AAAA,8BACC;AAAK,QAAA,SAAS,EAAEpB,OAAO,CAACqB,MAAxB;AAAA,+BACC;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,KAAKlB,mBAAL,CAAyBmB,IAAzB,CAA8B,IAA9B;AAA/B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAQA;;AAnCiC,C,CAsCnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA5DMT,U,CACEsB,W,GAAczB,Y;AA6DtB,eAAeG,UAAf","sourcesContent":["import { Fragment, useState, useEffect, Component } from \"react\";\nimport UsersContext from \"./user-context\";\n\nimport Users from \"./Users\";\nimport classes from \"./UserFinder.module.css\";\n\nclass UserFinder extends Component {\n\tstatic contextType = UsersContext;\n\tconstructor() {\n\t\tsuper();\n\t\t// console.log(UsersContext);\n\t\tthis.state = {\n\t\t\tfilteredUsers: this.context.users,\n\t\t\tsearchTerm: \"\",\n\t\t};\n\t}\n\tsearchChangeHandler = (event) => {\n\t\tthis.setState({\n\t\t\tsearchTerm: event.target.value,\n\t\t});\n\t};\n\t// prevProps and prevState must be 1st and 2nd components\n\t// they can be named anything but this is the convention\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.searchTerm !== this.state.searchTerm) {\n\t\t\tthis.setState({\n\t\t\t\tfilteredUsers: this.context.users.filter((user) =>\n\t\t\t\t\tuser.name.includes(this.state.searchTerm)\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className={classes.finder}>\n\t\t\t\t\t<input type=\"search\" onChange={this.searchChangeHandler.bind(this)} />\n\t\t\t\t</div>\n\t\t\t\t<Users users={this.state.filteredUsers} />\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n// const UserFinder = () => {\n// const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n// const [searchTerm, setSearchTerm] = useState(\"\");\n\n// useEffect(() => {\n// \tsetFilteredUsers(\n// \t\tDUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n// \t);\n// }, [searchTerm]);\n\n// const searchChangeHandler = (event) => {\n// \tsetSearchTerm(event.target.value);\n// };\n\n// return (\n// \t<Fragment>\n// \t\t<div className={classes.finder}>\n// \t\t\t<input type=\"search\" onChange={searchChangeHandler} />\n// \t\t</div>\n// \t\t<Users users={filteredUsers} />\n// \t</Fragment>\n// );\n// };\n\nexport default UserFinder;\n"]},"metadata":{},"sourceType":"module"}
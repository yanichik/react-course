{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nfunction useCounter() {\n  _s();\n\n  let counterType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    let interval = null;\n\n    if (counterType) {\n      const interval = setInterval(() => {\n        setCounter(prevCounter => prevCounter + 1);\n      }, 1000);\n    } else {\n      const interval = setInterval(() => {\n        setCounter(prevCounter => prevCounter - 1);\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, []);\n  return counter;\n}\n\n_s(useCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\nexport default useCounter;","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/custom-hooks/src/components/custom-hooks/useCounter.js"],"names":["useState","useEffect","useCounter","counterType","counter","setCounter","interval","setInterval","prevCounter","clearInterval"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,UAAT,GAAwC;AAAA;;AAAA,MAApBC,WAAoB,uEAAN,IAAM;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIK,QAAQ,GAAG,IAAf;;AACA,QAAIH,WAAJ,EAAiB;AAChB,YAAMG,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAClCF,QAAAA,UAAU,CAAEG,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;AACA,OAF2B,EAEzB,IAFyB,CAA5B;AAGA,KAJD,MAIO;AACN,YAAMF,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAClCF,QAAAA,UAAU,CAAEG,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;AACA,OAF2B,EAEzB,IAFyB,CAA5B;AAGA;;AACD,WAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;AACA,GAZQ,EAYN,EAZM,CAAT;AAaA,SAAOF,OAAP;AACA;;GAjBQF,U;;AAmBT,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useCounter(counterType = true) {\n\tconst [counter, setCounter] = useState(0);\n\n\tuseEffect(() => {\n\t\tlet interval = null;\n\t\tif (counterType) {\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tsetCounter((prevCounter) => prevCounter + 1);\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tsetCounter((prevCounter) => prevCounter - 1);\n\t\t\t}, 1000);\n\t\t}\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\treturn counter;\n}\n\nexport default useCounter;\n"]},"metadata":{},"sourceType":"module"}
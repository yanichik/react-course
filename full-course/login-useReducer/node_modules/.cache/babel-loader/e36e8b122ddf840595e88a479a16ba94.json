{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/login-useReducer/src/components/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogin: (email, password) => {},\n  onLogout: () => {}\n});\nexport default AuthContext;\nexport function AuthContextProvider(props) {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedUserLoggedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogin: loginHandler,\n      onLogout: logoutHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/login-useReducer/src/components/store/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogin","email","password","onLogout","AuthContextProvider","props","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","loginHandler","setItem","logoutHandler","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACvCC,EAAAA,UAAU,EAAE,KAD2B;AAEvCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE,CAFO;AAGvCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAHqB,CAApB,CAApB;AAMA,eAAeN,WAAf;AAEA,OAAO,SAASO,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAC1C,QAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;AAEA,QAAIF,6BAA6B,KAAK,GAAtC,EAA2C;AAC1CD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMI,YAAY,GAAG,CAACT,KAAD,EAAQC,QAAR,KAAqB;AACzCM,IAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GAHD;;AAKA,QAAMM,aAAa,GAAG,MAAM;AAC3BJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,YAAxB;AACAP,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAHD;;AAIA,sBACC,QAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNP,MAAAA,UAAU,EAAEA,UADN;AAENC,MAAAA,OAAO,EAAEU,YAFH;AAGNP,MAAAA,QAAQ,EAAES;AAHJ,KADR;AAAA,cAOEP,KAAK,CAACS;AAPR;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GA/BeV,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst AuthContext = React.createContext({\n\tisLoggedIn: false,\n\tonLogin: (email, password) => {},\n\tonLogout: () => {}\n});\n\nexport default AuthContext;\n\nexport function AuthContextProvider(props) {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n\t\tif (storedUserLoggedInInformation === \"1\") {\n\t\t\tsetIsLoggedIn(true);\n\t\t}\n\t}, []);\n\n\tconst loginHandler = (email, password) => {\n\t\tlocalStorage.setItem(\"isLoggedIn\", \"1\");\n\t\tsetIsLoggedIn(true);\n\t};\n\n\tconst logoutHandler = () => {\n\t\tlocalStorage.removeItem(\"isLoggedIn\");\n\t\tsetIsLoggedIn(false);\n\t};\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\tisLoggedIn: isLoggedIn,\n\t\t\t\tonLogin: loginHandler,\n\t\t\t\tonLogout: logoutHandler,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</AuthContext.Provider>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}
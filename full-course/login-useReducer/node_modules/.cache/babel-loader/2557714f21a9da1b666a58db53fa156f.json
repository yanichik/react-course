{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/login-useReducer/src/components/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false\n});\nexport default AuthContext;\nexport function AuthContextProvider(props) {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedUserLoggedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 2\n  }, this);\n}\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/login-useReducer/src/components/store/auth-context.js"],"names":["React","useState","useContext","AuthContext","createContext","isLoggedIn","AuthContextProvider","props","setIsLoggedIn","useEffect","storedUserLoggedInInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","onLogout","onLogin","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACvCC,EAAAA,UAAU,EAAE;AAD2B,CAApB,CAApB;AAIA,eAAeF,WAAf;AAEA,OAAO,SAASG,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAC1C,QAAM,CAACF,UAAD,EAAaG,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AAEAQ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMC,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;AAEA,QAAIF,6BAA6B,KAAK,GAAtC,EAA2C;AAC1CF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMK,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzCJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GAHD;;AAKA,QAAMS,aAAa,GAAG,MAAM;AAC3BN,IAAAA,YAAY,CAACO,UAAb,CAAwB,YAAxB;AACAV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAHD;;AAKA;AAAA,UAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACH,MAAAA,UAAU,EAAEA,UAAb;AAAyBc,MAAAA,QAAQ,EAAEF,aAAnC;AAAkDG,MAAAA,OAAO,EAAEP;AAA3D,KAA7B;AACC,IAAA,KAAK,EAAE;AAAER,MAAAA,UAAU,EAAEA,UAAd;AAA0Bc,MAAAA,QAAQ,EAAEF;AAApC,KADR;AAAA,cAGEV,KAAK,CAACc;AAHR;AAAA;AAAA;AAAA;AAAA;AAKA;;GA1Bef,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nconst AuthContext = React.createContext({\n\tisLoggedIn: false,\n});\n\nexport default AuthContext;\n\nexport function AuthContextProvider(props) {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n\t\tif (storedUserLoggedInInformation === \"1\") {\n\t\t\tsetIsLoggedIn(true);\n\t\t}\n\t}, []);\n\n\tconst loginHandler = (email, password) => {\n\t\tlocalStorage.setItem(\"isLoggedIn\", \"1\");\n\t\tsetIsLoggedIn(true);\n\t};\n\n\tconst logoutHandler = () => {\n\t\tlocalStorage.removeItem(\"isLoggedIn\");\n\t\tsetIsLoggedIn(false);\n\t};\n\n\t<AuthContext.Provider value={{isLoggedIn: isLoggedIn, onLogout: logoutHandler, onLogin: loginHandler}}\n\t\tvalue={{ isLoggedIn: isLoggedIn, onLogout: logoutHandler }}\n\t>\n\t\t{props.children}\n\t</AuthContext.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/login-useReducer/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction emailReducer(state, action) {\n  switch (action.type) {\n    case \"INPUT\":\n      return {\n        value: action.payload,\n        isValid: action.valid\n      };\n  }\n}\n\nconst Login = props => {\n  _s();\n\n  const initialEmailState = {\n    value: \"\",\n    isValid: false\n  };\n  const [emailState, dispatchEmail] = useReducer(emailReducer, initialEmailState); // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []); // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Checking form validity!');\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n    setFormIsValid(event.target.value.includes(\"@\") && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(enteredEmail.includes(\"@\") && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"A+wH4dbgkzNywFSvGHGkRlJlgE4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/login-useReducer/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","payload","isValid","valid","Login","props","initialEmailState","emailState","dispatchEmail","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","console","log","emailChangeHandler","event","setEnteredEmail","target","includes","trim","length","passwordChangeHandler","enteredEmail","validateEmailHandler","setEmailIsValid","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","emailIsValid","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nfunction emailReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"INPUT\":\n\t\t\treturn {value: action.payload, isValid: action.valid};\n\t}\n}\n\nconst Login = (props) => {\n\tconst initialEmailState = { value: \"\", isValid: false };\n\tconst [emailState, dispatchEmail] = useReducer(\n\t\temailReducer,\n\t\tinitialEmailState\n\t);\n\t// const [enteredEmail, setEnteredEmail] = useState('');\n\t// const [emailIsValid, setEmailIsValid] = useState();\n\tconst [enteredPassword, setEnteredPassword] = useState(\"\");\n\tconst [passwordIsValid, setPasswordIsValid] = useState();\n\tconst [formIsValid, setFormIsValid] = useState(false);\n\n\tuseEffect(() => {\n\t\tconsole.log(\"EFFECT RUNNING\");\n\n\t\treturn () => {\n\t\t\tconsole.log(\"EFFECT CLEANUP\");\n\t\t};\n\t}, []);\n\n\t// useEffect(() => {\n\t//   const identifier = setTimeout(() => {\n\t//     console.log('Checking form validity!');\n\t//     setFormIsValid(\n\t//       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n\t//     );\n\t//   }, 500);\n\n\t//   return () => {\n\t//     console.log('CLEANUP');\n\t//     clearTimeout(identifier);\n\t//   };\n\t// }, [enteredEmail, enteredPassword]);\n\n\tconst emailChangeHandler = (event) => {\n\t\tsetEnteredEmail(event.target.value);\n\n\t\tsetFormIsValid(\n\t\t\tevent.target.value.includes(\"@\") && enteredPassword.trim().length > 6\n\t\t);\n\t};\n\n\tconst passwordChangeHandler = (event) => {\n\t\tsetEnteredPassword(event.target.value);\n\n\t\tsetFormIsValid(\n\t\t\tenteredEmail.includes(\"@\") && event.target.value.trim().length > 6\n\t\t);\n\t};\n\n\tconst validateEmailHandler = () => {\n\t\tsetEmailIsValid(enteredEmail.includes(\"@\"));\n\t};\n\n\tconst validatePasswordHandler = () => {\n\t\tsetPasswordIsValid(enteredPassword.trim().length > 6);\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tprops.onLogin(enteredEmail, enteredPassword);\n\t};\n\n\treturn (\n\t\t<Card className={classes.login}>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${classes.control} ${\n\t\t\t\t\t\temailIsValid === false ? classes.invalid : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<label htmlFor=\"email\">E-Mail</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tvalue={enteredEmail}\n\t\t\t\t\t\tonChange={emailChangeHandler}\n\t\t\t\t\t\tonBlur={validateEmailHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${classes.control} ${\n\t\t\t\t\t\tpasswordIsValid === false ? classes.invalid : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tvalue={enteredPassword}\n\t\t\t\t\t\tonChange={passwordChangeHandler}\n\t\t\t\t\t\tonBlur={validatePasswordHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</Card>\n\t);\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
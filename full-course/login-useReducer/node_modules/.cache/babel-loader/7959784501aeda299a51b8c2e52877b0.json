{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/login-useReducer/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction emailReducer(state, action) {\n  switch (action.type) {\n    case \"INPUT\":\n      return {\n        value: action.payload,\n        isValid: action.payload.includes(\"@\")\n      };\n\n    case \"INPUT_BLUR\":\n      return {\n        value: state.value,\n        isValid: state.value.includes(\"@\")\n      };\n\n    default:\n      return {\n        value: \"\",\n        isValid: false\n      };\n  }\n}\n\nfunction passwordReducer(state, action) {\n  switch (action.type) {\n    case \"INPUT\":\n      return {\n        value: action.payload,\n        isValid: action.payload.length > 6\n      };\n\n    case \"INPUT_BLUR\":\n      return {\n        value: state.value,\n        isValid: state.value.length > 6 ? true : false\n      };\n\n    default:\n      return {\n        value: \"\",\n        isValid: false\n      };\n  }\n}\n\nconst Login = props => {\n  _s();\n\n  const ctx = useContext(AuthContext);\n  console.log(ctx);\n  const initialEmailState = {\n    value: \"\",\n    isValid: false\n  };\n  const initialPasswordState = {\n    value: \"\",\n    isValid: false\n  };\n  const [emailState, dispatchEmail] = useReducer(emailReducer, initialEmailState);\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, initialPasswordState); // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []); // object destructuring. emailIsValid and passwordIsValid are aliases\n\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailState.value.includes(\"@\") && passwordState.value.trim().length > 6);\n    }, 500);\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    }; // here passing in the properties of emailState & passwordState that were destructured and\n    // given aliases in lines 57-58. if we pass in the entire states then useEffect with run\n    // whenever any property of either state with change. But this way, it only runs when either\n    // of these two properties change\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: \"INPUT\",\n      payload: event.target.value\n    }); // setFormIsValid(\n    // \temailState.value.includes(\"@\") && passwordState.value.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: \"INPUT\",\n      payload: event.target.value\n    }); // setFormIsValid(\n    // \temailState.value.includes(\"@\") && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    }); // setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    }); // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    ctx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"jTB4gbQ3nHsBjEMw2U/jUs0KBIE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/login-useReducer/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","emailReducer","state","action","type","value","payload","isValid","includes","passwordReducer","length","Login","props","ctx","console","log","initialEmailState","initialPasswordState","emailState","dispatchEmail","passwordState","dispatchPassword","formIsValid","setFormIsValid","emailIsValid","passwordIsValid","identifier","setTimeout","trim","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../store/auth-context\";\n\nfunction emailReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"INPUT\":\n\t\t\treturn { value: action.payload, isValid: action.payload.includes(\"@\") };\n\t\tcase \"INPUT_BLUR\":\n\t\t\treturn { value: state.value, isValid: state.value.includes(\"@\") };\n\t\tdefault:\n\t\t\treturn { value: \"\", isValid: false };\n\t}\n}\nfunction passwordReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"INPUT\":\n\t\t\treturn { value: action.payload, isValid: action.payload.length > 6 };\n\t\tcase \"INPUT_BLUR\":\n\t\t\treturn {\n\t\t\t\tvalue: state.value,\n\t\t\t\tisValid: state.value.length > 6 ? true : false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn { value: \"\", isValid: false };\n\t}\n}\n\nconst Login = (props) => {\n\tconst ctx = useContext(AuthContext);\n\tconsole.log(ctx);\n\tconst initialEmailState = { value: \"\", isValid: false };\n\tconst initialPasswordState = { value: \"\", isValid: false };\n\tconst [emailState, dispatchEmail] = useReducer(\n\t\temailReducer,\n\t\tinitialEmailState\n\t);\n\tconst [passwordState, dispatchPassword] = useReducer(\n\t\tpasswordReducer,\n\t\tinitialPasswordState\n\t);\n\t// const [enteredEmail, setEnteredEmail] = useState('');\n\t// const [emailIsValid, setEmailIsValid] = useState();\n\t// const [enteredPassword, setEnteredPassword] = useState(\"\");\n\t// const [passwordIsValid, setPasswordIsValid] = useState();\n\tconst [formIsValid, setFormIsValid] = useState(false);\n\n\tuseEffect(() => {\n\t\tconsole.log(\"EFFECT RUNNING\");\n\n\t\treturn () => {\n\t\t\tconsole.log(\"EFFECT CLEANUP\");\n\t\t};\n\t}, []);\n\n\t// object destructuring. emailIsValid and passwordIsValid are aliases\n\tconst { isValid: emailIsValid } = emailState;\n\tconst { isValid: passwordIsValid } = passwordState;\n\n\tuseEffect(() => {\n\t\tconst identifier = setTimeout(() => {\n\t\t\tconsole.log(\"Checking form validity!\");\n\t\t\tsetFormIsValid(\n\t\t\t\temailState.value.includes(\"@\") && passwordState.value.trim().length > 6\n\t\t\t);\n\t\t}, 500);\n\n\t\treturn () => {\n\t\t\tconsole.log(\"CLEANUP\");\n\t\t\tclearTimeout(identifier);\n\t\t};\n\t\t// here passing in the properties of emailState & passwordState that were destructured and\n\t\t// given aliases in lines 57-58. if we pass in the entire states then useEffect with run\n\t\t// whenever any property of either state with change. But this way, it only runs when either\n\t\t// of these two properties change\n\t}, [emailIsValid, passwordIsValid]);\n\n\tconst emailChangeHandler = (event) => {\n\t\t// setEnteredEmail(event.target.value);\n\t\tdispatchEmail({ type: \"INPUT\", payload: event.target.value });\n\n\t\t// setFormIsValid(\n\t\t// \temailState.value.includes(\"@\") && passwordState.value.trim().length > 6\n\t\t// );\n\t};\n\n\tconst passwordChangeHandler = (event) => {\n\t\t// setEnteredPassword(event.target.value);\n\t\tdispatchPassword({ type: \"INPUT\", payload: event.target.value });\n\t\t// setFormIsValid(\n\t\t// \temailState.value.includes(\"@\") && event.target.value.trim().length > 6\n\t\t// );\n\t};\n\n\tconst validateEmailHandler = () => {\n\t\tdispatchEmail({ type: \"INPUT_BLUR\" });\n\t\t// setEmailIsValid(enteredEmail.includes(\"@\"));\n\t};\n\n\tconst validatePasswordHandler = () => {\n\t\tdispatchPassword({ type: \"INPUT_BLUR\" });\n\t\t// setPasswordIsValid(enteredPassword.trim().length > 6);\n\t};\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tctx.onLogin(emailState.value, passwordState.value);\n\t};\n\n\treturn (\n\t\t<Card className={classes.login}>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${classes.control} ${\n\t\t\t\t\t\temailState.isValid === false ? classes.invalid : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<label htmlFor=\"email\">E-Mail</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tvalue={emailState.value}\n\t\t\t\t\t\tonChange={emailChangeHandler}\n\t\t\t\t\t\tonBlur={validateEmailHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${classes.control} ${\n\t\t\t\t\t\tpasswordState.isValid === false ? classes.invalid : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tvalue={passwordState.value}\n\t\t\t\t\t\tonChange={passwordChangeHandler}\n\t\t\t\t\t\tonBlur={validatePasswordHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</Card>\n\t);\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
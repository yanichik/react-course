{"ast":null,"code":"var _jsxFileName = \"/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/styling-components/src/components/CourseGoals/CourseInput/CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import styled from \"styled-components\";\n\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./CourseInput.module.css\"; // div as a styled component\n// const FormControl = styled.div`\n// \tmargin: 0.5rem 0;\n// \t& label {\n// \t\tfont-weight: bold;\n// \t\tdisplay: block;\n// \t\tmargin-bottom: 0.5rem;\n//     // dynamic color inside the styled component\n//     color: ${props => props.invalid ? 'red' : 'black'};\n// \t}\n// \t& input {\n// \t\tdisplay: block;\n// \t\twidth: 100%;\n// \t\tborder: 1px solid #ccc;\n// \t\tfont: inherit;\n// \t\tline-height: 1.5rem;\n// \t\tpadding: 0 0.25rem;\n//     background-color: ${props => props.invalid ? 'salmon' : 'transparent'};\n// \t\tborder-color: ${props => props.invalid ? 'red' : 'black'};\n// \t}\n// \t& input:focus {\n// \t\toutline: none;\n// \t\tbackground: #fad0ec;\n// \t\tborder-color: #8b005d;\n// \t}\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseInput = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = event => {\n    // if typed value is not just blank spaces, then set isValid to true to reset the inline styling inside label + input\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `styles[${\"form-control\"}] ${!isValid && styles.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CourseInput, \"ThKE3neuvaE9uj2GU0j+/HEwCa4=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"sources":["/Users/yanichik/Documents/0_Coding/1_Udemy Courses/react-course/full-course/styling-components/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","Button","styles","CourseInput","props","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal","invalid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMS,sBAAsB,GAAIC,KAAD,IAAW;AACzC;AACA,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAvC,EAA0C;AACzCN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;;AACDF,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACA,GAND;;AAQA,QAAMG,iBAAiB,GAAIL,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACM,cAAN;;AACA,QAAIX,YAAY,CAACQ,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACrCN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACA;;AACDJ,IAAAA,KAAK,CAACa,SAAN,CAAgBZ,YAAhB;AACA,GAPD;;AASA,sBACC;AAAM,IAAA,QAAQ,EAAEU,iBAAhB;AAAA,4BAIC;AACC,MAAA,SAAS,EAAG,UAAS,cAAe,KAAI,CAACR,OAAD,IAAYL,MAAM,CAACgB,OAAQ,EADpE;AAAA,8BAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAET;AAA7B;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAWC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CApCD;;GAAMN,W;;KAAAA,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\n// import styled from \"styled-components\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./CourseInput.module.css\";\n\n// div as a styled component\n// const FormControl = styled.div`\n// \tmargin: 0.5rem 0;\n\n// \t& label {\n// \t\tfont-weight: bold;\n// \t\tdisplay: block;\n// \t\tmargin-bottom: 0.5rem;\n//     // dynamic color inside the styled component\n//     color: ${props => props.invalid ? 'red' : 'black'};\n// \t}\n\n// \t& input {\n// \t\tdisplay: block;\n// \t\twidth: 100%;\n// \t\tborder: 1px solid #ccc;\n// \t\tfont: inherit;\n// \t\tline-height: 1.5rem;\n// \t\tpadding: 0 0.25rem;\n//     background-color: ${props => props.invalid ? 'salmon' : 'transparent'};\n// \t\tborder-color: ${props => props.invalid ? 'red' : 'black'};\n// \t}\n\n// \t& input:focus {\n// \t\toutline: none;\n// \t\tbackground: #fad0ec;\n// \t\tborder-color: #8b005d;\n// \t}\n\n// `;\n\nconst CourseInput = (props) => {\n\tconst [enteredValue, setEnteredValue] = useState(\"\");\n\tconst [isValid, setIsValid] = useState(true);\n\n\tconst goalInputChangeHandler = (event) => {\n\t\t// if typed value is not just blank spaces, then set isValid to true to reset the inline styling inside label + input\n\t\tif (event.target.value.trim().length > 0) {\n\t\t\tsetIsValid(true);\n\t\t}\n\t\tsetEnteredValue(event.target.value);\n\t};\n\n\tconst formSubmitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tif (enteredValue.trim().length === 0) {\n\t\t\tsetIsValid(false);\n\t\t\treturn;\n\t\t}\n\t\tprops.onAddGoal(enteredValue);\n\t};\n\n\treturn (\n\t\t<form onSubmit={formSubmitHandler}>\n\t\t\t{/* add logic to dynamically include 'invalid' class when isValid is false */}\n\t\t\t{/* FormControl is a div styled component */}\n\t\t\t{/* <FormControl invalid={!isValid}> */}\n\t\t\t<div\n\t\t\t\tclassName={`styles[${\"form-control\"}] ${!isValid && styles.invalid}`}\n\t\t\t>\n\t\t\t\t<label>Course Goal</label>\n\t\t\t\t<input type=\"text\" onChange={goalInputChangeHandler} />\n\t\t\t</div>\n\t\t\t{/* </FormControl> */}\n\t\t\t<Button type=\"submit\">Add Goal</Button>\n\t\t</form>\n\t);\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}